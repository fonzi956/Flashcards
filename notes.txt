
		["In urls.py, what does urlpatterns do?", 
		"The urlpatterns list routes URLs to views", 
		""],

		["how to get functions from other apps for urls purposes", 
		"from app_name.views import function_view, other_function_view", 
		""],
//new
		["within the urlpatterns list what is path", 
		"In urlpatterns: The path returns an element for inclusion in urlpatterns; path(route, view, kwargs=None, name=None) ", 
		""],

		["In urlpatterns: The path returns an element for inclusion in urlpatterns; path(route, view, kwargs=None, name=None) what are the does route do", 
		"The route argument should be a string or gettext_lazy() (see Translating URL patterns) that contains a URL pattern. The string may contain angle brackets (like <username> above) to capture part of the URL and send it as a keyword argument to the view. The angle brackets may include a converter specification (like the int part of <int:section>) which limits the characters matched and may also change the type of the variable passed to the view. <br> ", 
		""],

		["In urlpatterns: The path returns an element for inclusion in urlpatterns; path(route, view, kwargs=None, name=None) what are the does view and kwargs do", 
		"The view argument is a view function or the result of as_view() for class-based views. It can also be an django.urls.include(). The kwargs argument allows you to pass additional arguments to the view function or method.", 
		""],

		["In urlpatterns: The path returns an element for inclusion in urlpatterns; path(route, view, kwargs=None, name=None) what are the does name do, 
		"Use for naming URL patterns, choose names that are unlikely to clash with other applicationsâ€™ choice of names for perform URL reverding. ", 
		""],


		["what is in models.py", 
		"it has class that inherit from django models.Model that maps to the database using models.field and field type and etc: <br> <br> class ClassName(models.Model): <br> &nbsp; field_name = models.TextField(blank=True, null=True) <br> &nbsp; another_field_name = models.DecimalField(decimal_places=2, max_digits=10000)", 
		""],

		["what is an instance method on our model or a function on our model", 
		"creates dynamic linking of urls without going back to urls.py without include ti change the route;  In model.py use get_absolute_url function that grabs the URL inside of Django so it's used in other places like html template and in the function returns reverse function with the name name arugment (in urls.py in the urlpatterns and in the path has a name argument to match the url path) and the kwargs", 
		""],

		["", 
		"", 
		""],


		/*
		+"<br> 
		<br> 
		<br> &nbsp; //tab
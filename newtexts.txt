		["what does Python needs to use MySQL",
		"<br> <font color=\"green\"># Python needs a MySQL driver to access the MySQL database. </font>"
		+"<br> <font color=\"green\"># We recommend that you use PIP to install MySQL Connector: </font>"
		+"<br> <font color=\"green\"># pip install mysql-connector </font>"
		,""],
		["Create Connection",
		"<br> <font color=\"green\"># demo_mysql_connection.py: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\""
		+"<br> )"
		+"<br> "
		+"<br> print(mydb)"
		,""],
		["Creating a Database",
		"<br> <font color=\"green\"># To create a database in MySQL, use the \"CREATE DATABASE\" statement: </font>"
		+"<br> <font color=\"green\"># Ex: create a database named \"mydatabase\": </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> mycursor.execute(\"CREATE DATABASE mydatabase\")"
		,""],
		["Check if Database Exists",
		"<br> <font color=\"green\"># You can check if a database exist by listing all databases in your system by using the \"SHOW DATABASES\" statement: </font>"
		+"<br> <font color=\"green\"># Ex: Return a list of your system\'s databases: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> mycursor.execute(\"SHOW DATABASES\")"
		+"<br> "
		+"<br> for x in mycursor:"
		+"<br> &nbsp; print(x)"
		+"<br> "
		+"<br> <font color=\"green\"># Or you can try to access the database when making the connection: </font>"
		+"<br> <font color=\"green\"># Ex:Try connecting to the database \"mydatabase\": </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> <font color=\"green\"># If the database does not exist, you will get an error. </font>"
		,""],
		["Creating a Table",
		"<br> <font color=\"green\"># To create a table in MySQL, use the \"CREATE TABLE\" statement. </font>"
		+"<br> <font color=\"green\"># Make sure you define the name of the database when you create the connection </font>"
		+"<br> <font color=\"green\"># Ex: Create a table named \"customers\": </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> mycursor.execute(\"CREATE TABLE customers (name VARCHAR(255), address VARCHAR(255))\")"
		,""],
		["Check if Table Exists",
		"<br> <font color=\"green\"># You can check if a table exist by listing all tables in your database with the \"SHOW TABLES\" statement: </font>"
		+"<br> <font color=\"green\"># Ex: Return a list of your system\'s databases: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> mycursor.execute(\"SHOW TABLES\")"
		+"<br> "
		+"<br> for x in mycursor:"
		+"<br> &nbsp; print(x)"
		,""],
		["Primary Key",
		"<br> <font color=\"green\"># When creating a table, you should also create a column with a unique key for each record. </font>"
		+"<br> <font color=\"green\"># This can be done by defining a PRIMARY KEY. </font>"
		+"<br> <font color=\"green\"># We use the statement \"INT AUTO_INCREMENT PRIMARY KEY\" which will insert a unique number for each record. Starting at 1, and increased by one for each record. </font>"
		+"<br> <font color=\"green\"># Ex: Create primary key when creating the table: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> mycursor.execute(\"CREATE TABLE customers (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255))\")"
		+"<br> "
		+"<br> <font color=\"green\"># If the table already exists, use the ALTER TABLE keyword: </font>"
		+"<br> <font color=\"green\"># Ex: Create primary key on an existing table: </font>"
		+"<br> mycursor.execute(\"ALTER TABLE customers ADD COLUMN id INT AUTO_INCREMENT PRIMARY KEY\")"
		,""],
		["Insert Into Table",
		"<br> <font color=\"green\"># To fill a table in MySQL, use the \"INSERT INTO\" statement. </font>"
		+"<br> <font color=\"green\"># Ex: Insert a record in the \"customers\" table: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"INSERT INTO customers (name, address) VALUES (%s, %s)\""
		+"<br> val = (\"John\", \"Highway 21\")"
		+"<br> mycursor.execute(sql, val)"
		+"<br> "
		+"<br> mydb.commit()"
		+"<br> "
		+"<br> print(mycursor.rowcount, \"record inserted.\")"
		+"<br> <font color=\"green\"># Important!: Notice the statement: mydb.commit(). It is required to make the changes, otherwise no changes are made to the table. </font>"
		,""],
		["Insert Multiple Rows",
		"<br> <font color=\"green\"># To insert multiple rows into a table, use the executemany() method. </font>"
		+"<br> <font color=\"green\"># The second parameter of the executemany() method is a list of tuples, containing the data you want to insert: </font>"
		+"<br> <font color=\"green\"># Ex: Fill the \"customers\" table with data: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"INSERT INTO customers (name, address) VALUES (%s, %s)\""
		+"<br> val = ["
		+"<br> &nbsp; (\'Peter\', \'Lowstreet 4\'),"
		+"<br> &nbsp; (\'Amy\', \'Apple st 652\'),"
		+"<br> &nbsp; (\'Hannah\', \'Mountain 21\'),"
		+"<br> &nbsp; (\'Michael\', \'Valley 345\'),"
		+"<br> &nbsp; (\'Sandy\', \'Ocean blvd 2\'),"
		+"<br> &nbsp; (\'Betty\', \'Green Grass 1\'),"
		+"<br> &nbsp; (\'Richard\', \'Sky st 331\'),"
		+"<br> &nbsp; (\'Susan\', \'One way 98\'),"
		+"<br> &nbsp; (\'Vicky\', \'Yellow Garden 2\'),"
		+"<br> &nbsp; (\'Ben\', \'Park Lane 38\'),"
		+"<br> &nbsp; (\'William\', \'Central st 954\'),"
		+"<br> &nbsp; (\'Chuck\', \'Main Road 989\'),"
		+"<br> &nbsp; (\'Viola\', \'Sideway 1633\')"
		+"<br> ]"
		+"<br> "
		+"<br> mycursor.executemany(sql, val)"
		+"<br> "
		+"<br> mydb.commit()"
		+"<br> "
		+"<br> print(mycursor.rowcount, \"was inserted.\")"
		,""],
		["Get Inserted ID",
		"<br> <font color=\"green\"># You can get the id of the row you just inserted by asking the cursor object. </font>"
		+"<br> <font color=\"green\"># Note: If you insert more that one row, the id of the last inserted row is returned. </font>"
		+"<br> <font color=\"green\"># Ex: Insert one row, and return the ID: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"INSERT INTO customers (name, address) VALUES (%s, %s)\""
		+"<br> val = (\"Michelle\", \"Blue Village\")"
		+"<br> mycursor.execute(sql, val)"
		+"<br> "
		+"<br> mydb.commit()"
		+"<br> "
		+"<br> print(\"1 record inserted, ID:\", mycursor.lastrowid)"
		,""],
		["Select From a Table",
		"<br> <font color=\"green\"># To select from a table in MySQL, use the \"SELECT\" statement: </font>"
		+"<br> <font color=\"green\"># Ex: Select all records from the \"customers\" table, and display the result: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> mycursor.execute(\"SELECT * FROM customers\")"
		+"<br> <font color=\"green\"># Note: We use the fetchall() method, which fetches all rows from the last executed statement. </font>"
		+"<br> myresult = mycursor.fetchall()"
		+"<br> "
		+"<br> for x in myresult:"
		+"<br> &nbsp; print(x)"
		+"<br> <font color=\"green\"># (1, \'John\', \'Highway 21\') </font>"
		+"<br> <font color=\"green\"># (2, \'Peter\', \'Lowstreet 27\') </font>"
		+"<br> <font color=\"green\"># (3, \'Amy\', \'Apple st 652\') </font>"
		+"<br> <font color=\"green\"># (4, \'Hannah\', \'Mountain 21\') </font>"
		+"<br> <font color=\"green\"># (5, \'Michael\', \'Valley 345\') </font>"
		,""],
		["Selecting Columns",
		"<br> <font color=\"green\"># To select only some of the columns in a table, use the \"SELECT\" statement followed by the column name(s): </font>"
		+"<br> <font color=\"green\"># Ex: Select only the name and address columns: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> mycursor.execute(\"SELECT name, address FROM customers\")"
		+"<br> "
		+"<br> myresult = mycursor.fetchall()"
		+"<br> "
		+"<br> for x in myresult:"
		+"<br> &nbsp; print(x)"
		+"<br> <font color=\"green\"># (\'John\', \'Highway 21\') </font>"
		+"<br> <font color=\"green\"># (\'Peter\', \'Lowstreet 27\') </font>"
		+"<br> <font color=\"green\"># (\'Amy\', \'Apple st 652\') </font>"
		+"<br> <font color=\"green\"># (\'Hannah\', \'Mountain 21\') </font>"
		,""],
		["Using the fetchone() Method",
		"<br> <font color=\"green\"># If you are only interested in one row, you can use the fetchone() method. </font>"
		+"<br> <font color=\"green\"># The fetchone() method will return the first row of the result: </font>"
		+"<br> <font color=\"green\"># Ex:Fetch only one row: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> mycursor.execute(\"SELECT * FROM customers\")"
		+"<br> "
		+"<br> myresult = mycursor.fetchone()"
		+"<br> "
		+"<br> print(myresult)"
		+"<br> <font color=\"green\"># (1, \'John\', \'Highway 21\') </font>"
		,""],
		["Select With a Filter",
		"<br> <font color=\"green\"># When selecting records from a table, you can filter the selection by using the \"WHERE\" statement: </font>"
		+"<br> <font color=\"green\"># Ex: Select record(s) where the address is \"Park Lane 38\": result: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"SELECT * FROM customers WHERE address =\'Park Lane 38\'\""
		+"<br> "
		+"<br> mycursor.execute(sql)"
		+"<br> "
		+"<br> myresult = mycursor.fetchall()"
		+"<br> "
		+"<br> for x in myresult:"
		+"<br> &nbsp; print(x)"
		+"<br> <font color=\"green\"># (11, \'Ben\', \'Park Lane 38\') </font>"
		,""],
		["Wildcard Characters",
		"<br> <font color=\"green\"># You can also select the records that starts, includes, or ends with a given letter or phrase. </font>"
		+"<br> <font color=\"green\"># Use the % to represent wildcard characters: </font>"
		+"<br> <font color=\"green\"># Ex: Select records where the address contains the word \"way\": </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"SELECT * FROM customers WHERE address LIKE \'%way%\'\""
		+"<br> "
		+"<br> mycursor.execute(sql)"
		+"<br> "
		+"<br> myresult = mycursor.fetchall()"
		+"<br> "
		+"<br> for x in myresult:"
		+"<br> &nbsp; print(x)"
		+"<br> <font color=\"green\"># (1, \'John\', \'Highway 21\') </font>"
		+"<br> <font color=\"green\"># (9, \'Susan\', \'One way 98\') </font>"
		+"<br> <font color=\"green\"># (14, \'Viola\', \'Sideway 1633\') </font>"
		,""],
		["(Where)Prevent SQL Injection",
		"<br> <font color=\"green\"># When query values are provided by the user, you should escape the values. </font>"
		+"<br> <font color=\"green\"># This is to prevent SQL injections, which is a common web hacking technique to destroy or misuse your database. </font>"
		+"<br> <font color=\"green\"># The mysql.connector module has methods to escape query values: </font>"
		+"<br> <font color=\"green\"># Ex: Escape query values by using the placholder %s method: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"SELECT * FROM customers WHERE address = %s\""
		+"<br> adr = (\"Yellow Garden 2\", )"
		+"<br> "
		+"<br> mycursor.execute(sql, adr)"
		+"<br> "
		+"<br> myresult = mycursor.fetchall()"
		+"<br> "
		+"<br> for x in myresult:"
		+"<br> &nbsp; print(x)"
		+"<br> <font color=\"green\"># (10, \'Vicky\', \'Yellow Garden 2\') </font>"
		,""],
		["Sort the Result",
		"<br> <font color=\"green\"># Use the ORDER BY statement to sort the result in ascending or descending order. </font>"
		+"<br> <font color=\"green\"># The ORDER BY keyword sorts the result ascending by default. To sort the result in descending order, use the DESC keyword. </font>"
		+"<br> <font color=\"green\"># Ex: Sort the result alphabetically by name: result: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"SELECT * FROM customers ORDER BY name\""
		+"<br> "
		+"<br> mycursor.execute(sql)"
		+"<br> "
		+"<br> myresult = mycursor.fetchall()"
		+"<br> "
		+"<br> for x in myresult:"
		+"<br> &nbsp; print(x)"
		+"<br> <font color=\"green\"># (3, \'Amy\', \'Apple st 652\') </font>"
		+"<br> <font color=\"green\"># (11, \'Ben\', \'Park Lane 38\') </font>"
		+"<br> <font color=\"green\"># (7, \'Betty\', \'Green Grass 1\') </font>"
		+"<br> <font color=\"green\"># (13, \'Chuck\', \'Main Road 989\') </font>"
		+"<br> <font color=\"green\"># (4, \'Hannah\', \'Mountain 21\') </font>"
		,""],
		["ORDER BY DESC",
		"<br> <font color=\"green\"># Use the DESC keyword to sort the result in a descending order. </font>"
		+"<br> <font color=\"green\"># Ex: Sort the result reverse alphabetically by name: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"SELECT * FROM customers ORDER BY name DESC\""
		+"<br> "
		+"<br> mycursor.execute(sql)"
		+"<br> "
		+"<br> myresult = mycursor.fetchall()"
		+"<br> "
		+"<br> for x in myresult:"
		+"<br> &nbsp; print(x)"
		+"<br> <font color=\"green\"># (12, \'William\', \'Central st 954\') (14, \'Viola\', \'Sideway 1633\') </font>"
		+"<br> <font color=\"green\"># (10, \'Vicky\', \'Yellow Garden 2\') </font>"
		+"<br> <font color=\"green\"># (9, \'Susan\', \'One way 98\') </font>"
		+"<br> <font color=\"green\"># (6, \'Sandy\', \'Ocean blvd 2\') </font>"
		+"<br> <font color=\"green\"># (8, \'Richard\', \'Sky st 331\') </font>"
		+"<br> <font color=\"green\"># (2, \'Peter\', \'Lowstreet 27\') </font>"
		,""],
		["Delete Record",
		"<br> <font color=\"green\"># You can delete records from an existing table by using the \"DELETE FROM\" statement: </font>"
		+"<br> <font color=\"green\"># Ex: Delete any record where the address is \"Mountain 21\": </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> <font color=\"green\"># mydb.commit(). It is required to make the changes, otherwise no changes are made to the table. </font>"
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> <font color=\"green\"># The WHERE clause specifies which record(s) that should be deleted. If you omit the WHERE clause, all records will be deleted! </font>"
		+"<br> sql = \"DELETE FROM customers WHERE address = \'Mountain 21\'\""
		+"<br> "
		+"<br> mycursor.execute(sql)"
		+"<br> "
		+"<br> mydb.commit()"
		+"<br> "
		+"<br> print(mycursor.rowcount, \"record(s) deleted\")"
		+"<br> <font color=\"green\"># 1 record(s) deleted </font>"
		,""],
		["(Delete)Prevent SQL Injection",
		"<br> <font color=\"green\"># It is considered a good practice to escape the values of any query, also in delete statements. </font>"
		+"<br> <font color=\"green\"># This is to prevent SQL injections, which is a common web hacking technique to destroy or misuse your database. </font>"
		+"<br> <font color=\"green\"># The mysql.connector module uses the placeholder %s to escape values in the delete statement: </font>"
		+"<br> <font color=\"green\"># Ex: Escape values by using the placeholder %s method: </font>"
		+"<br> "
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"DELETE FROM customers WHERE address = %s\""
		+"<br> adr = (\"Yellow Garden 2\", )"
		+"<br> "
		+"<br> mycursor.execute(sql, adr)"
		+"<br> "
		+"<br> mydb.commit()"
		+"<br> "
		+"<br> print(mycursor.rowcount, \"record(s) deleted\")"
		+"<br> <font color=\"green\"># 1 record(s) deleted </font>"
		,""],
		["Delete a Table",
		"<br> <font color=\"green\"># You can delete an existing table by using the \"DROP TABLE\" statement: </font>"
		+"<br> <font color=\"green\"># Ex:Delete the table \"customers\": </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"DROP TABLE customers\""
		+"<br> "
		+"<br> mycursor.execute(sql)"
		+"<br> <font color=\"green\">#If this page was executed with no error(s), you have successfully deleted the \"customers\" table. </font>"
		,""],
		["Drop Only if Exist",
		"<br> <font color=\"green\"># If the the table you want to delete is already deleted, or for any other reason does not exist, you can use the IF EXISTS keyword to avoid getting an error. </font>"
		+"<br> <font color=\"green\"># Ex: Delete the table \"customers\" if it exists: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"DROP TABLE IF EXISTS customers\""
		+"<br> "
		+"<br> mycursor.execute(sql)"
		+"<br> <font color=\"green\">#If this page was executed with no error(s), you have successfully deleted the \"customers\" table. </font>"
		,""],
		["Update Table",
		"<br> <font color=\"green\"># You can update existing records in a table by using the \"UPDATE\" statement: </font>"
		+"<br> <font color=\"green\"># Ex: Overwrite the address column from \"Valley 345\" to \"Canyoun 123\": </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> <font color=\"green\"># mydb.commit(). It is required to make the changes, otherwise no changes are made to the table. </font>"
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> <font color=\"green\"># The WHERE clause specifies which record or records that should be updated. If you omit the WHERE clause, all records will be updated! </font>"
		+"<br> sql = \"UPDATE customers SET address = \'Canyon 123\' WHERE address = \'Valley 345\'\""
		+"<br> "
		+"<br> mycursor.execute(sql)"
		+"<br> "
		+"<br> mydb.commit()"
		+"<br> "
		+"<br> print(mycursor.rowcount, \"record(s) affected\")"
		+"<br> <font color=\"green\"># 1 record(s) affected </font>"
		,""],
		["(Update)Prevent SQL Injection",
		"<br> <font color=\"green\"># It is considered a good practice to escape the values of any query, also in update statements. </font>"
		+"<br> <font color=\"green\"># This is to prevent SQL injections, which is a common web hacking technique to destroy or misuse your database. </font>"
		+"<br> <font color=\"green\"># The mysql.connector module uses the placeholder %s to escape values in the delete statement: </font>"
		+"<br> <font color=\"green\"># Ex: Escape values by using the placholder %s method: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"UPDATE customers SET address = %s WHERE address = %s\""
		+"<br> val = (\"Valley 345\", \"Canyon 123\")"
		+"<br> "
		+"<br> mycursor.execute(sql, val)"
		+"<br> "
		+"<br> mydb.commit()"
		+"<br> "
		+"<br> print(mycursor.rowcount, \"record(s) affected\")"
		+"<br> <font color=\"green\"># 1 record(s) affected </font>"
		,""],
		["Limit the Result",
		"<br> <font color=\"green\"># You can limit the number of records returned from the query, by using the \"LIMIT\" statement: </font>"
		+"<br> <font color=\"green\"># Ex: Select the 5 first records in the \"customers\" table: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> mycursor.execute(\"SELECT * FROM customers LIMIT 5\")"
		+"<br> "
		+"<br> myresult = mycursor.fetchall()"
		+"<br> "
		+"<br> for x in myresult:"
		+"<br> &nbsp; print(x)"
		+"<br> <font color=\"green\"># (1, \'John\', \'Highway 21\') </font>"
		+"<br> <font color=\"green\"># (2, \'Peter\', \'Lowstreet 27\') </font>"
		+"<br> <font color=\"green\"># (3, \'Amy\', \'Apple st 652\') </font>"
		+"<br> <font color=\"green\"># (4, \'Hannah\', \'Mountain 21\') </font>"
		+"<br> <font color=\"green\"># (5, \'Michael\', \'Valley 345\') </font>"
		,""],
		["Limit the Result Start From Another Position",
		"<br> <font color=\"green\"># If you want to return five records, starting from the third record, you can use the \"OFFSET\" keyword: </font>"
		+"<br> <font color=\"green\"># Ex: Start from position 3, and return 5 records: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> mycursor.execute(\"SELECT * FROM customers LIMIT 5 OFFSET 2\")"
		+"<br> "
		+"<br> myresult = mycursor.fetchall()"
		+"<br> "
		+"<br> for x in myresult:"
		+"<br> &nbsp; print(x)"
		+"<br> <font color=\"green\"># (3, \'Amy\', \'Apple st 652\') </font>"
		+"<br> <font color=\"green\"># (4, \'Hannah\', \'Mountain 21\') </font>"
		+"<br> <font color=\"green\"># (5, \'Michael\', \'Valley 345\') </font>"
		+"<br> <font color=\"green\"># (6, \'Sandy\', \'Ocean blvd 2\') </font>"
		+"<br> <font color=\"green\"># (7, \'Betty\', \'Green Grass 1\') </font>"
		,""],
		["Join Two or More Tables",
		"<br> <font color=\"green\"># You can combine rows from two or more tables, based on a related column between them, by using a JOIN statement. </font>"
		+"<br> <font color=\"green\"># Consider you have a \"users\" table and a \"products\" table: </font>"
		+"<br> <font color=\"green\"># users </font>"
		+"<br> <font color=\"green\"># { id: 1, name: \'John\', fav: 154}, </font>"
		+"<br> <font color=\"green\"># { id: 2, name: \'Peter\', fav: 154}, </font>"
		+"<br> <font color=\"green\"># { id: 3, name: \'Amy\', fav: 155}, </font>"
		+"<br> <font color=\"green\"># { id: 4, name: \'Hannah\', fav:}, </font>"
		+"<br> <font color=\"green\"># { id: 5, name: \'Michael\', fav:} </font>"
		+"<br> <font color=\"green\"># products </font>"
		+"<br> <font color=\"green\"># { id: 154, name: \'Chocolate Heaven\' }, </font>"
		+"<br> <font color=\"green\"># { id: 155, name: \'Tasty Lemons\' }, </font>"
		+"<br> <font color=\"green\"># { id: 156, name: \'Vanilla Dreams\' } </font>"
		+"<br> <font color=\"green\"># These two tables can be combined by using users\' fav field and products\' id field. </font>"
		+"<br> <font color=\"green\"># Ex: Join users and products to see the name of the users favorite product: </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"yourusername\","
		+"<br> &nbsp; passwd=\"yourpassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"SELECT \"
		+"<br> &nbsp; users.name AS user, \"
		+"<br> &nbsp; products.name AS favorite \"
		+"<br> &nbsp; FROM users \"
		+"<br> &nbsp; INNER JOIN products ON users.fav = products.id\""
		+"<br> "
		+"<br> mycursor.execute(sql)"
		+"<br> "
		+"<br> myresult = mycursor.fetchall()"
		+"<br> "
		+"<br> for x in myresult:"
		+"<br> &nbsp; print(x)"
		+"<br> <font color=\"green\"># (\'John\', \'Chocolate Heaven\') </font>"
		+"<br> <font color=\"green\"># (\'Peter\', \'Chocolate Heaven\') </font>"
		+"<br> <font color=\"green\"># (\'Amy\', \'Tasty Lemon\') </font>"
		+"<br> <font color=\"green\"># Note: You can use JOIN instead of INNER JOIN. They will both give you the same result. </font>"
		,""],
		["LEFT JOIN",
		"<br> <font color=\"green\"># In the example above, Hannah, and Michael were excluded from the result, that is because INNER JOIN only shows the records where there is a match. </font>"
		+"<br> <font color=\"green\"># If you want to show all users, even if they do not have a favorite product, use the LEFT JOIN statement: </font>"
		+"<br> <font color=\"green\"># Ex: Select all users and their favorite product: </font>"
		+"<br> <font color=\"green\"># users </font>"
		+"<br> <font color=\"green\"># { id: 1, name: \'John\', fav: 154}, </font>"
		+"<br> <font color=\"green\"># { id: 2, name: \'Peter\', fav: 154}, </font>"
		+"<br> <font color=\"green\"># { id: 3, name: \'Amy\', fav: 155}, </font>"
		+"<br> <font color=\"green\"># { id: 4, name: \'Hannah\', fav:}, </font>"
		+"<br> <font color=\"green\"># { id: 5, name: \'Michael\', fav:} </font>"
		+"<br> <font color=\"green\"># products </font>"
		+"<br> <font color=\"green\"># { id: 154, name: \'Chocolate Heaven\' }, </font>"
		+"<br> <font color=\"green\"># { id: 155, name: \'Tasty Lemons\' }, </font>"
		+"<br> <font color=\"green\"># { id: 156, name: \'Vanilla Dreams\' } </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"myusername\","
		+"<br> &nbsp; passwd=\"mypassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"SELECT \"
		+"<br> &nbsp; users.name AS user, \"
		+"<br> &nbsp; products.name AS favorite \"
		+"<br> &nbsp; FROM users \"
		+"<br> &nbsp; LEFT JOIN products ON users.fav = products.id\""
		+"<br> "
		+"<br> mycursor.execute(sql)"
		+"<br> "
		+"<br> myresult = mycursor.fetchall()"
		+"<br> "
		+"<br> for x in myresult:"
		+"<br> &nbsp; print(x)"
		+"<br> <font color=\"green\"># (\'John\', \'Chocolate Heaven\') </font>"
		+"<br> <font color=\"green\"># (\'Peter\', \'Chocolate Heaven\') </font>"
		+"<br> <font color=\"green\"># (\'Amy\', \'Tasty Lemon\') </font>"
		+"<br> <font color=\"green\"># (\'Hannah\', None) </font>"
		+"<br> <font color=\"green\"># (\'Michael\', None) </font>"
		,""],
		["RIGHT JOIN",
		"<br> <font color=\"green\"># If you want to return all products, and the users who have them as their favorite, even if no user have them as their favorite, use the RIGHT JOIN statement: </font>"
		+"<br> <font color=\"green\"># Ex: Select all products, and the user(s) who have them as their favorite: </font>"
		+"<br> <font color=\"green\"># users </font>"
		+"<br> <font color=\"green\"># { id: 1, name: \'John\', fav: 154}, </font>"
		+"<br> <font color=\"green\"># { id: 2, name: \'Peter\', fav: 154}, </font>"
		+"<br> <font color=\"green\"># { id: 3, name: \'Amy\', fav: 155}, </font>"
		+"<br> <font color=\"green\"># { id: 4, name: \'Hannah\', fav:}, </font>"
		+"<br> <font color=\"green\"># { id: 5, name: \'Michael\', fav:} </font>"
		+"<br> <font color=\"green\"># products </font>"
		+"<br> <font color=\"green\"># { id: 154, name: \'Chocolate Heaven\' }, </font>"
		+"<br> <font color=\"green\"># { id: 155, name: \'Tasty Lemons\' }, </font>"
		+"<br> <font color=\"green\"># { id: 156, name: \'Vanilla Dreams\' } </font>"
		+"<br> import mysql.connector"
		+"<br> "
		+"<br> mydb = mysql.connector.connect("
		+"<br> &nbsp; host=\"localhost\","
		+"<br> &nbsp; user=\"myusername\","
		+"<br> &nbsp; passwd=\"mypassword\","
		+"<br> &nbsp; database=\"mydatabase\""
		+"<br> )"
		+"<br> "
		+"<br> mycursor = mydb.cursor()"
		+"<br> "
		+"<br> sql = \"SELECT \"
		+"<br> &nbsp; users.name AS user, \"
		+"<br> &nbsp; products.name AS favorite \"
		+"<br> &nbsp; FROM users \"
		+"<br> &nbsp; RIGHT JOIN products ON users.fav = products.id\""
		+"<br> "
		+"<br> mycursor.execute(sql)"
		+"<br> "
		+"<br> myresult = mycursor.fetchall()"
		+"<br> "
		+"<br> for x in myresult:"
		+"<br> &nbsp; print(x)"
		+"<br> <font color=\"green\"># (\'John\', \'Chocolate Heaven\') </font>"
		+"<br> <font color=\"green\"># (\'Peter\', \'Chocolate Heaven\') </font>"
		+"<br> <font color=\"green\"># (\'Amy\', \'Tasty Lemon\') </font>"
		+"<br> <font color=\"green\"># (None, \'Vanilla Dreams\') </font>"
		+"<br> <font color=\"green\"># Note: Hannah and Michael, who have no favorite product, are not included in the result. </font>"
		,""],
